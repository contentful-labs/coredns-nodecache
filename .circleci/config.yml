version: 2.1
executors:
  docker-publisher:
    environment:
      IMAGE_NAME: contentful/coredns-nodecache
    machine:
      image: ubuntu-2004:202107-02
      docker_layer_caching: true
jobs:
  lint:
    executor: docker-publisher
    steps:
      - checkout
      - run: make lint
  test:
    executor: docker-publisher
    steps:
      - checkout
      - run: make test
  build:
    executor: docker-publisher
    steps:
      - checkout
      - run: make build
      - run:
          name: Archive Docker images
          command: |
            docker save -o image-amd64.tar contentful-labs/coredns-nodecache-amd64
            docker save -o image-arm64.tar contentful-labs/coredns-nodecache-arm64
      - persist_to_workspace:
          root: .
          paths:
            - ./image-amd64.tar
            - ./image-arm64.tar
  publish-branch:
    executor: docker-publisher
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Load archived Docker images
          command: |
            docker load -i /tmp/workspace/image-amd64.tar
            docker load -i /tmp/workspace/image-arm64.tar
      - run:
          name: publish docker images with branch
          command: |
            docker tag contentful-labs/coredns-nodecache-amd64:latest $IMAGE_NAME:$CIRCLE_BRANCH-amd64
            docker tag contentful-labs/coredns-nodecache-arm64:latest $IMAGE_NAME:$CIRCLE_BRANCH-arm64
            echo "$docker_password" | docker login -u "$docker_login" --password-stdin
            docker push $IMAGE_NAME:$CIRCLE_BRANCH-amd64
            docker push $IMAGE_NAME:$CIRCLE_BRANCH-arm64
            docker manifest create $IMAGE_NAME:$CIRCLE_BRANCH $IMAGE_NAME:$CIRCLE_BRANCH-amd64 $IMAGE_NAME:$CIRCLE_BRANCH-arm64
            docker manifest annotate --arch arm64 $IMAGE_NAME:$CIRCLE_BRANCH $IMAGE_NAME:$CIRCLE_BRANCH-arm64
            docker push $IMAGE_NAME:$CIRCLE_BRANCH
  publish-tag:
    executor: docker-publisher
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Load archived Docker image
          command: docker load -i /tmp/workspace/image.tar
      - run:
          name: publish docker images with tag
          command: |
            docker tag contentful-labs/coredns-nodecache-amd64:latest $IMAGE_NAME:$CIRCLE_TAG-amd64
            docker tag contentful-labs/coredns-nodecache-arm64:latest $IMAGE_NAME:$CIRCLE_TAG-arm64
            echo "$docker_password" | docker login -u "$docker_login" --password-stdin
            docker push $IMAGE_NAME:$CIRCLE_TAG-amd64
            docker push $IMAGE_NAME:$CIRCLE_TAG-arm64
            docker manifest create $IMAGE_NAME:$CIRCLE_TAG $IMAGE_NAME:$CIRCLE_TAG-amd64 $IMAGE_NAME:$CIRCLE_TAG-arm64
            docker manifest annotate --arch arm64 $IMAGE_NAME:$CIRCLE_TAG $IMAGE_NAME:$CIRCLE_TAG-arm64
            docker push $IMAGE_NAME:$CIRCLE_TAG
  publish-master:
    executor: docker-publisher
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Load archived Docker image
          command: |
            docker load -i /tmp/workspace/image-amd64.tar
            docker load -i /tmp/workspace/image-arm64.tar
      - run:
          name: publish docker images with 'latest' tag
          command: |
            docker tag contentful-labs/coredns-nodecache-amd64:latest $IMAGE_NAME:latest-amd64
            docker tag contentful-labs/coredns-nodecache-arm64:latest $IMAGE_NAME:latest-arm64
            echo "$docker_password" | docker login -u "$docker_login" --password-stdin
            docker push $IMAGE_NAME:latest-amd64
            docker push $IMAGE_NAME:latest-arm64
            docker manifest create $IMAGE_NAME:latest $IMAGE_NAME:latest-amd64 $IMAGE_NAME:latest-arm64
            docker manifest annotate --arch arm64 $IMAGE_NAME:latest $IMAGE_NAME:latest-arm64
            docker push $IMAGE_NAME:latest
workflows:
  version: 2
  flow:
    jobs:
      - lint
      - test:
          filters:
            tags:
              only: /v[0-9]+(\.[0-9]+)*(-.*)*/
      - build:
          filters:
            tags:
              only: /v[0-9]+(\.[0-9]+)*(-.*)*/
      - publish-branch:
          requires:
            - build
            - lint
            - test
          filters:
            branches:
              ignore:
                - master
                - /pull\/[0-9]+/
      - publish-tag:
          # Only run this job on git tag pushes
          requires:
            - build
            - lint
            - test
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v[0-9]+(\.[0-9]+)*(-.*)*/
      - publish-master:
          requires:
            - build
            - lint
            - test
          filters:
            branches:
              only: master
